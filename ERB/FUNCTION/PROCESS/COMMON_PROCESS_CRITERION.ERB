;==================================================
;
;	기준치 함수
;		기준치의 표시나관리, 개변하는 일련의 함수
;
;		별 바리안트에서도 움직이면 좋았던 것이지만@이것 보고
;
;==================================================

;복수의선택지가 존재할 때,
;변수 정보 따위로부터 기준치의 대소를 결정해선택를 실시하는 경우,
;이것들의 함수를 이용할 수 있습니다.

;[중요] 기본적으로는 입출력 함수만을 호출해 사용해 주세요
;       표시 함수 및관리함수를 직접 호출하는 것은 추천 하지 않습니다

;※이것은 원 있던디버그용 표시 시스템을 개조해 만든 것입니다

;-------------------------------------------------------------------------------
;	정의 함수
;-------------------------------------------------------------------------------

;-------------------------------------------
;일단조최대 문자수(전각)[0-]
;일행의 문자수가 여기로 지정당했다문자수를
;돌파하면 2단조에 이행
;※극히 큰 수를 설정해 두면 강제 일단조,
;  반대로 0을 설정하면 강제 2단조로 할 수가 있습니다
;-------------------------------------------
@DEF_CRI_WID
#FUNCTION
RETURNF 58

;-------------------------------------------
;보정항목명 표시 영역폭(전각)[8-]
;보정항목명이;여기로 지정당했다문자수를 돌파하면 잘라서 버림
;-------------------------------------------
@DEF_CRI_WID_ITEM
#FUNCTION
RETURNF 10

;-------------------------------------------
;우선도 계산
;판정 요소 마다의우선도를 결정한다
;-------------------------------------------
@DEF_CRI_ELE_PRI(ARGS)
SELECTCASE ARGS
	CASE "기준치"
		CALL PRI_CRI_VAR(, 1)
	CASE "ACT보정치"
		CALL PRI_CRI_VAR( 10)
	CASEELSE
		CALL PRI_CRI_VAR(, 2)
ENDSELECT

;-------------------------------------------------------------------------------
;	입출력 함수군 ;입출력 함수 군
;-------------------------------------------------------------------------------

;외부로부터는 이하의 입출력 함수를 호출해 이용해 주세요; 외부로부터 다음 입출력 함수를 호출하여 사용하십시오

;-------------------------------------------
;수치 정의
;ARGS가방침명
;ARG가 고정치
;수치 가산으로 변환해 취급한다
; 값 정의
; ARGS이 방침 이름
; ARG가 고정 값
; 수치 가산로 변환하여 처리
;-------------------------------------------
@DIM_CRI_VAR, ARGS, ARG
ARG = ARG - VARIABLE_OF_CRI("GET", ARGS + "누계")
CALLF VARIABLE_OF_CRI("ADD", ARGS, ARG)

;-------------------------------------------
;수치 가산
;ARGS가방침명
;ARG가 고정치
;ARG:1이 변동치(0～ARG:1)
;-------------------------------------------
@ADD_CRI_VAR, ARGS, ARG, ARG:1
CALLF VARIABLE_OF_CRI("ADD", ARGS, ARG, ARG:1)

;-------------------------------------------
;수치 감산
;혼란을 부르므로 준비하지 않는다
;가산 함수에 부의 값을 대입하는 것
;-------------------------------------------

;-------------------------------------------
;수치 곱셈(×인수%)
;ARGS가방침명
;ARG가 고정치
;ARG:1이 변동치(0～ARG:1)
;-------------------------------------------
@MUL_CRI_VAR, ARGS, ARG = 100, ARG:1 = 100
CALLF VARIABLE_OF_CRI("MUL", ARGS, ARG, ARG:1)

;-------------------------------------------
;수치 제산
;혼란을 부르므로 준비하지 않는다
;곱셈 함수에 100 미만의 값을 대입하는 것
;-------------------------------------------

;-------------------------------------------
;우선도 변경
;ARG를 1/100에했다량을 지정
;ARG:1=0 ARG를 채용
;      1 우선도 기준치를 사용(ARG를 무시해, 100으로 변경)
;      2 우선도 처리를 하지 않는다(ARG를 무시해, 100으로 변경)
;-------------------------------------------
@PRI_CRI_VAR, ARG = 100, ARG:1 = 0
CALLF VARIABLE_OF_CRI("PRI", , ARG, ARG:1)

;-------------------------------------------
;수치 연산
;ARGS가방침명
;ARGS:1이 연산 지정
;
;아직
;-------------------------------------------
;@ARI_CRI_VAR, ARGS, ARGS:1

;--------------------------------------------
;함수 초기화 ;함수 초기화/기준치종, 약칭 지정
;ARGS에 기준치종, 약칭을/단락으로 지정한다
;예:종  『테위//네─응/공주님』
;    약칭 『테위/응/옷깃/나    』
;※종과 약칭은 머리로부터 차례로 관련지을 수 있습니다.
;  완전한 공백을 종이나 약칭으로 지정할 수 없습니다. 버그를 일으킵니다
;  기준치 종명에 중복은 용서되지 않습니다. 버그를 일으킵니다
;  약칭은 별로 없어도 움직입니다. 양에 다소가 있어도 움직입니다.
;ARG  =가짜 함수 초기화  (기준치 처리 개시, ARGS, ARG:1 지정가능)
;     =진기준치종 추가(이미 있는 기준치종, 약칭에 ARGS를 추가)
;ARG:1=가짜 ARGS는 기준치종
;     =진 ARGS는 기준치 약칭
;※기준치종의 추가가 종료할 때까지
;  다른 입출력 함수를 호출하지 말아 주세요
;--------------------------------------------
@SET_CRI_VAR, ARGS, ARG = 0, ARG:1 = 0
;ARG=0으로 표시 함수도 초기화
SIF ARG == 0
	CALL SHOW_CRI_VAR, "@초기화"
;관리함수에 건네준다
CALLF VARIABLE_OF_CRI("SET", ARGS, ARG, ARG:1)

;--------------------------------------------
;수치 초기화
;ARG=가짜 소계만 리셋트
;    진누계도 포함해 리셋트
;--------------------------------------------
@RES_CRI_VAR, ARG
;관리함수에 건네준다
CALLF VARIABLE_OF_CRI("RES", , ARG)

;--------------------------------------------
;항목 변경/우선도 계산
;ARGS에 새로운 항목을 지정한다
;ARG(비트 0)=소계등을 리셋트 하지 않습니다
;   (비트 1)=우선도 계산을 실시하지 않습니다
;--------------------------------------------
@CHA_CRI_VAR, ARGS, ARG = 0
;항목이 지정되고 있으면 항목 변경
IF ARGS != ""
	;관리함수에 건네준다
	CALLF VARIABLE_OF_CRI("CHA", ARGS)
	;전회항목을 받는다
	LOCALS = %RESULTS%
	;전회항목이 없으면 개시 처리
	SIF LOCALS == ""
		LOCALS = @개시
	;표시 함수 호출
	CALL SHOW_CRI_VAR, LOCALS
ENDIF
;소계등 리셋트
SIF (ARG & 1) == 0
	CALLF VARIABLE_OF_CRI("RES")
;우선도 계산
SIF (ARG & 2) == 0
	CALL DEF_CRI_ELE_PRI(ARGS)

;--------------------------------------------
;선택확정
;ARGS=확정 방법
;--------------------------------------------
@DEF_CRI_VAR, ARGS
;전회항목을 받는다
CALLF VARIABLE_OF_CRI("GET", "항목")
;표시 함수 호출
CALL SHOW_CRI_VAR, RESULTS
;선택확정
CALLF VARIABLE_OF_CRI("DEF", ARGS)
;표시 함수 호출(종료 처리)
CALL SHOW_CRI_VAR, "@종료"

;--------------------------------------------
;기준치보정량 해석
;--------------------------------------------
@ANA_CRI_VAR
;관리함수에 건네준다
CALL SHOW_CRI_VAR, "@해석"

;--------------------------------------------
;수치취득
;ARGS에취득했다 있고 변수명을 넣어 사용한다
;--------------------------------------------
@GET_CRI_VAR, ARGS
#FUNCTION
;관리함수에 건네준다
RETURNF VARIABLE_OF_CRI("GET", ARGS)

;-------------------------------------------------------------------------------
;	표시 함수군
;-------------------------------------------------------------------------------

;-------------------------------------
;표시 함수
;오제키수를 빠진 후, 그 함수의 내용이 어땠던인지를 표시한다
;ARGS는 표시할 때의 타이틀명
;-------------------------------------
@SHOW_CRI_VAR, ARGS
#LOCALSIZE 4
#LOCALSSIZE 6
;약 2시간 마다 써서 보내는 편지자열변수
#DIMS LTEMPS, 6
;카운트 변수
#DIM LCOUNT, 1
;표번호변수
#DIM LTABLE, 1
;기준치종번호변수
#DIM LCRI, 1
;기준치종단조배분 지정
#DIM LLINE, 2
;보정항목명 표시 영역
#DIM LWITEM, 1
;진행 상황 감시
#DIM LCHECK, 1
;소계·총계 일시 보존
#DIM LSTOT, 30
#DIM LTOT, 30
;디버그시 또한 표시 지정시만 표시
SIF !FLAG:디버그 || FLAG:디버그표시끄기
	RETURN RESULT
;초기화 처리
IF ARGS == "@초기화"
	VARSET LLINE
	VARSET LWITEM
	VARSET LCHECK
;표시 개시 처리
ELSEIF ARGS == "@개시"
	;표시 개시되고 있으면 강제 종료
	SIF LCHECK & 1
		RETURN RESULT
	;표시 개시를 확인
	LCHECK |= 1
	;기준치종수취득
	LOCAL = VARIABLE_OF_CRI("GET", "기준치종수")
	;일단조최대 문자수를 바탕으로단조배분을 결정
	IF (DEF_CRI_WID() * 2) >= (24 + (LOCAL * 10))
		LLINE = LOCAL
	ELSE
		LLINE:1 = LOCAL / 2
		LLINE = LOCAL - LLINE:1
	ENDIF
	;보정항목명 표시 영역을 확인
	LWITEM = DEF_CRI_WID_ITEM() * 2
	;보조 함수군에게필요인 인수를 건네준다
	CALL SHOW_CRI_VAR_SEP(-1, LWITEM, LLINE, LLINE:1)
	CALL SHOW_CRI_VAR_TIT(, LWITEM)
;표시 종료 처리
ELSEIF ARGS == "@종료"
	;헤더 표시가되어 있지 않으면 강제 종료
	SIF !(LCHECK & 2)
		RETURN RESULT
	;footer 표시를 확인
	LCHECK |= 4
	;헤더, 해석 표시를 가능하게
	LCHECK &= ~10
	;-------------------------------------
	;footer 생성
	;-------------------------------------
	;누계취득
	CALLF VARIABLE_OF_CRI("GET", "누계")
	FOR LCRI, 0, LLINE + LLINE:1
		LTOT:LCRI = RESULT:LCRI
	NEXT
	;개시색보존
	LOCAL = GETCOLOR()
	;결정종 0을 확인
	LOCAL:1 = GET_CRI_VAR("결정")
	;확인 결정종수카운트
	LOCAL:2 = 0
	;표의 수만큼 루프
	FOR LTABLE, 0, 1 + (LLINE:1 > 0)
		;캐릭터 라인 보관 함수의 지정 위치 변경
		CALL STRBANK_CRI(, LTABLE)
		;단락 생성
		CALL SHOW_CRI_VAR_SEP, 1, LTABLE
		;항목명 표시
		CALL SHOW_CRI_VAR_TIT, "합계치"
		;기준치 종별 처리
		FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
			;단락 생성
			CALL STRBANK_CRI("│")
			;결정종이면
			IF LCRI == LOCAL:1
				;색을 변경해, 다음의 결정종을 확인
				CALL STRBANK_CRI(@"{LTOT:LCRI, 8}", , 0, 2, 0x66FFFF)
				LOCAL:2++
				LOCAL:1 = GET_CRI_VAR("결정" + @"{LOCAL:2}")
			ELSE
				;그렇지 않으면 색은 개시색
				CALL STRBANK_CRI(@"{LTOT:LCRI, 8}")
			ENDIF
		NEXT
		;표를 닫는다
		CALL STRBANK_CRI("│", , 1)
		CALL SHOW_CRI_VAR_SEP, 2, LTABLE
		;표시해, 테키스트 보관 함수를 비운다
		CALL STRBANK_CRI(, , 3)
	NEXT
;해석 처리
ELSEIF ARGS == "@해석"
	;footer 표시가되어 있지 않은지, 해석 표시가 되고 있으면 강제 종료
	SIF !(LCHECK & 4) || LCHECK & 8
		RETURN RESULT
	;해석 표시를 확인
	LCHECK |= 8
	;-------------------------------------
	;해석표 생성
	;-------------------------------------
	;개시색보존
	LOCAL = GETCOLOR()
	;약칭취득
	CALLF VARIABLE_OF_CRI("GET", "기준치종 약칭")
	;표의 수만큼 루프
	FOR LTABLE, 0, 1 + (LLINE:1 > 0)
		;캐릭터 라인 보관 함수의 지정 위치 변경
		CALL STRBANK_CRI(, LTABLE)
		;표를 연다
		CALL SHOW_CRI_VAR_SEP, 0, LTABLE
		;항목명 표시
		CALL SHOW_CRI_VAR_TIT, "명칭"
		;기준치 종명 표시
		LOCALS = 
		FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
			LOCALS += @"│%SUBSTRING(RESULTS:LCRI, 0, 7), 8, LEFT%"
		NEXT
		CALL STRBANK_CRI(@"%LOCALS%│", , 1)
		;단락 생성
		CALL SHOW_CRI_VAR_SEP, 1, LTABLE
	NEXT
	;취득인수 캐릭터 라인
	SPLIT "고정 누계/변동 누계/변동부누계/고정 곱셈 누계/변동 곱셈 누계/변동부곱셈 누계", "/", LOCALS
	;항목명
	SPLIT "합계 고정치(가산)/합계 변동치(가산·정)/합계 변동치(가산·부)/합계 고정치(곱셈)/합계 변동치(곱셈·정)/합계 변동치(곱셈·부)", "/", LTEMPS
	FOR LCOUNT, 0, 6
		;가산치 처리전은 0에 초기화
		IF LCOUNT == 0
			VARSET RESULT
		;곱셈치 처리전은 100(%)에 초기화
		ELSEIF LCOUNT == 3
			VARSET RESULT, 100
		ENDIF
		;고정 누계(가산)취득
		CALLF VARIABLE_OF_CRI("GET", LOCALS:LCOUNT)
		;모두 0(가산계), 모두 100(곱셈계)이 아니면
		LOCAL:2 = LCOUNT < 3 ? 0 # 100
		IF MAXARRAY(RESULT) > LOCAL:2 || MINARRAY(RESULT) < LOCAL:2
			;일시 변수에 내용을 확보
			FOR LCRI, 0, LLINE + LLINE:1
				LSTOT:LCRI = RESULT:LCRI
				;고정 누계(가산)의 경우 총계에는 100배를 가산
				IF LCOUNT < 1
					LTOT:LCRI = RESULT:LCRI * 100
				;※이 이후, 절대치 99를 넘으면 상한 돌파라고 본다
				;변동 누계(가산)의 경우 총계에는 50배를 가산
				ELSEIF LCOUNT < 3
					SIF ABS(LTOT:LCRI) < 9900
						LTOT:LCRI += RESULT:LCRI * 50
				;※상한 돌파시도*0만은 무시하지 않는다
				;고정 누계(곱셈)의 경우 총계에는 그대로 곱셈 처리
				ELSEIF LCOUNT < 4
					SIF (ABS(LTOT:LCRI) < 9900) || (RESULT:LCRI == 0)
						LTOT:LCRI = LTOT:LCRI * RESULT:LCRI / 100
				;변동 누계(곱셈)의 경우 총계에는 1/2을 곱셈 처리
				ELSE
					SIF (ABS(LTOT:LCRI) < 9900) || (RESULT:LCRI == 0)
						LTOT:LCRI = LTOT:LCRI * RESULT:LCRI / 200
				ENDIF
			NEXT
			;표의 수만큼 루프
			FOR LTABLE, 0, 1 + (LLINE:1 > 0)
				;캐릭터 라인 보관 함수의 지정 위치 변경
				CALL STRBANK_CRI(, LTABLE)
				;항목명 표시
				CALL SHOW_CRI_VAR_TIT, LTEMPS:LCOUNT
				;기준치 종별 처리
				FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
					;단락 생성
					CALL STRBANK_CRI("│")
					;가산계 표시
					IF LCOUNT < 3
						;한계 돌파시에 색을 바꾼다(정:파랑, 부:세키)
						IF LSTOT:LCRI == -9900
							LOCAL:1 = 0xC07070
						ELSEIF LSTOT:LCRI == 9900
							LOCAL:1 = 0x66FFFF
						ELSE
							LOCAL:1 = LOCAL
						ENDIF
						;수치 표시
						CALL STRBANK_CRI(@"{LSTOT:LCRI, 5}   ", , 0, 2, LOCAL:1)
					;곱셈계 표시
					ELSE
						;수치 표시
						CALL STRBANK_CRI(@"{LSTOT:LCRI, 5}\%  ", , 0, 2, LOCAL:1)
					ENDIF
				NEXT
				;단락 생성
				CALL STRBANK_CRI("│", , 1)
			NEXT
		ENDIF
	NEXT
	;RESULT 초기화
	VARSET RESULT
	;표의 수만큼 루프
	FOR LTABLE, 0, 1 + (LLINE:1 > 0)
		;캐릭터 라인 보관 함수의 지정 위치 변경
		CALL STRBANK_CRI(, LTABLE)
		;항목명 표시
		CALL SHOW_CRI_VAR_TIT, "합계 기대치"
		;기준치 종별 처리
		FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
			;단락 생성
			CALL STRBANK_CRI("│")
			;절대치 99이상을+-99.99(상한 돌파)로서 취급한다
			SIF ABS(LTOT:LCRI) >= 9900
				LTOT:LCRI = SIGN(LTOT:LCRI) * 9999
			;치를취득
			LOCALS = {LTOT:LCRI}
			;길이를 잰다
			STRLENS LOCALS
			;길이에 맞추어 정형
			LOCALS = %"0" * LIMIT(3 - RESULT, 0, 3)%%LOCALS%
			;길이를 다시 잰다
			STRLENS LOCALS
			;상한 돌파시 색을 바꾼다
			IF LTOT:LCRI == -9999
				LOCAL:1 = 0xC07070
			ELSEIF LTOT:LCRI == 9999
				LOCAL:1 = 0x66FFFF
			ELSE
				LOCAL:1 = LOCAL
			ENDIF
			;수치 표시
			CALL STRBANK_CRI(@"%SUBSTRING(LOCALS, 0, RESULT-2),5%.%SUBSTRING(LOCALS, RESULT-2)%", , 0, 2, LOCAL:1)
		NEXT
		;표를 닫는다
		CALL STRBANK_CRI("│", , 1)
		CALL SHOW_CRI_VAR_SEP, 2, LTABLE
		;표시해, 테키스트 보관 함수를 비운다
		CALL STRBANK_CRI(, , 3)
	NEXT
;항목 표시 처리
ELSE
	;표시 개시가되어 있지 않으면 강제 종료
	SIF !(LCHECK & 1)
		RETURN RESULT
	;모든 소계가 0의 항목은 표시하지 않는다
	SIF !VARIABLE_OF_CRI("GET", "작은 변화동유무")
		RETURN RESULT
	;처음는 헤더 생성
	IF !(LCHECK & 2)
		;약칭취득
		CALLF VARIABLE_OF_CRI("GET", "기준치종 약칭")
		;표의 수만큼 루프
		FOR LTABLE, 0, 1 + (LLINE:1 > 0)
			;캐릭터 라인 보관 함수의 지정 위치 변경
			CALL STRBANK_CRI(, LTABLE)
			;표를 연다
			CALL SHOW_CRI_VAR_SEP, 0, LTABLE
			;항목명 표시
			CALL SHOW_CRI_VAR_TIT, "명칭"
			;기준치 종명 표시
			LOCALS = 
			FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
				LOCALS += @"│%SUBSTRING(RESULTS:LCRI, 0, 7), 8, LEFT%"
			NEXT
			CALL STRBANK_CRI(@"%LOCALS%│", , 1)
			;단락 생성
			CALL SHOW_CRI_VAR_SEP, 1, LTABLE
		NEXT
		;헤더 표시를 확인
		LCHECK |= 2
		;footer 표시를 가능하게
		LCHECK &= ~4
	ENDIF
	;항목 표시 개시
	LOCAL = GETCOLOR()
	;소계 및 누계를취득
	CALLF VARIABLE_OF_CRI("GET", "소계")
	FOR LCRI, 0, LLINE + LLINE:1
		LSTOT:LCRI = RESULT:LCRI
	NEXT
	CALLF VARIABLE_OF_CRI("GET", "누계")
	FOR LCRI, 0, LLINE + LLINE:1
		LTOT:LCRI = RESULT:LCRI
	NEXT
	;가산의 유무를 확인
	LOCAL:3 = VARIABLE_OF_CRI("GET", "가산 유무")
	;표의 수만큼 루프
	FOR LTABLE, 0, 1 + (LLINE:1 > 0)
		;캐릭터 라인 보관 함수의 지정 위치 변경
		CALL STRBANK_CRI(, LTABLE)
		;단락 생성
		CALL STRBANK_CRI("│")
		;우선도 상황에 의해 분류
		SELECTCASE VARIABLE_OF_CRI("GET", "우선도 채용")
			CASE 0
				LOCAL:1 = LOCAL
			CASE 1
				LOCAL:1 = 0x7070C0
			CASE 2
				LOCAL:1 = 0x70C070
		ENDSELECT
		;항목명 표시
		CALL STRBANK_CRI(@"%SUBSTRING(ARGS, 0, LWITEM), LWITEM, LEFT%", , 0, 2, LOCAL:1)
		;기준치 종별 표시
		FOR LCRI, SUMARRAY(LLINE, 0, LTABLE), SUMARRAY(LLINE, 0, LTABLE + 1)
			;단락 생성
			CALL STRBANK_CRI("│")
			;가산이 있는 경우, 가산식에서 표시
			IF LOCAL:3
				;정부에 의해 분류
				IF LSTOT:LCRI < 0
					LOCAL:1 = 0xC07070
				ELSEIF LSTOT:LCRI > 0
					LOCAL:1 = 0x66FFFF
				ELSE
					LOCAL:1 = LOCAL
				ENDIF
				;수치 표시
				CALL STRBANK_CRI(@"\@ LSTOT:LCRI >= 0 ? + # - \@{ABS(LSTOT:LCRI), 2}({LTOT:LCRI, 3})", , 0, 2, LOCAL:1)
			;가산이 없는 경우, 곱셈식에서 표시
			ELSE
				;증가, 감소에 의해 분류
				IF LSTOT:LCRI < 0
					LOCAL:1 = 0xC07070
				ELSEIF LSTOT:LCRI > 0
					LOCAL:1 = 0x66FFFF
				ELSE
					LOCAL:1 = LOCAL
				ENDIF
				IF LTOT:LCRI == 0
					CALL STRBANK_CRI(@"* 0({LTOT:LCRI, 3})", , 0, 2, LOCAL)
					CONTINUE
				ELSEIF (LTOT:LCRI - LSTOT:LCRI) == 0
					CALL STRBANK_CRI(@"   ERROR", , 0, 2, LOCAL)
					CONTINUE
				ENDIF
				;수치 생성
				IF ABS(LTOT:LCRI) < ABS(LTOT:LCRI - LSTOT:LCRI) && ABS(LTOT:LCRI) != 0
					LOCAL:2 = (LTOT:LCRI - LSTOT:LCRI) * 100 / LTOT:LCRI
					LTEMPS = /
				ELSE
					LOCAL:2 = LTOT:LCRI * 100 / (LTOT:LCRI - LSTOT:LCRI)
					LTEMPS = *
				ENDIF
				IF LOCAL:2 < 0
					LOCAL:2 = MIN(ABS(LOCAL:2), 900)
					LTEMPS = %LTEMPS%-{LOCAL:2 / 100}
				ELSE
					LOCAL:2 = MIN(LOCAL:2, 9900)
					IF LOCAL:2 < 1000
						LTEMPS = %LTEMPS% {LOCAL:2 / 100}
					ELSE
						LTEMPS = %LTEMPS%{LOCAL:2 / 100}
					ENDIF
				ENDIF
				;수치 표시
				CALL STRBANK_CRI(@"%LTEMPS%({LTOT:LCRI, 3})", , 0, 2, LOCAL:1)
			ENDIF
		NEXT
		;단락 생성
		CALL STRBANK_CRI(@"│", , 1)
	NEXT
ENDIF
RETURN RESULT

;-------------------------------------------------
;표시 보조 함수군
;-------------------------------------------------
;단락 생성
;ARG   -1 =함수 초기화, 0 =개시, 1 =중간, 2 =종단
;ARG:1 LTABLE
;초기화시만 ARG:1 = LWITEM, ARG:2 = LLINE, ARG:3 = LLINE:1
@SHOW_CRI_VAR_SEP(ARG, ARG:1, ARG:2, ARG:3)
;단락
IF ARG > -1
	;개시 단락
	IF ARG == 0
		LOCALS:0 = ┌
		LOCALS:1 = ┬
		LOCALS:2 = ┐
	;중간 단락
	ELSEIF ARG == 1
		LOCALS:0 = ├
		LOCALS:1 = ┼
		LOCALS:2 = ┤
	;종단 단락
	ELSEIF ARG == 2
		LOCALS:0 = └
		LOCALS:1 = ┴
		LOCALS:2 = ┘
	ENDIF
	CALL STRBANK_CRI(@"%LOCALS%%"─"*(LOCAL/2)%%(LOCALS:1+"─"*4)*LOCAL:(1+ARG:1)%%LOCALS:2%", , 1)
;함수 초기화 ;함수 초기화
ELSE
	LOCAL:0 = ARG:1
	LOCAL:1 = ARG:2
	LOCAL:2 = ARG:3
ENDIF

;항목명 생성
;ARGS 항목명
;초기화시만 ARG = LWITEM ※ARG를 지정하면 초기화라고 보여집니다
@SHOW_CRI_VAR_TIT(ARGS, ARG = -1)
IF ARG != -1
	LOCAL = ARG
	RETURN RESULT
ENDIF
CALL STRBANK_CRI(@"│%ARGS, LOCAL, LEFT%")

;-------------------------------------------------
;표시테키스트 보관 함수_기준치 함수용 개변판@STRBANK_CRI
;※에 째─실마리응의 것을 개변
;	캐릭터 라인 인수:보존하는 글내용（공문자렬가）
;	인수 0:보관 위치 정보. 0이나 1을선택. 하늘인가-1을 도했다경우는전회의물을 계속
;	인수 1:개행 정보. 0으로 개행 없음, 1으로 개행, 2로 클릭 기다려, 3으로 테키스트 방출해 폐기, 4로 방출, 5로 폐기（3이상 때 캐릭터 라인 인수는 무시한다）
;	인수 2:문자 색정보. 0으로 지정 없음, 1으로 일시 데포카라, 2로 일시 칼라 지정, 3으로 칼라 지정하면서, 그 칼라를 유지한다（표시가 끝나도 돌아오지 않는다）
;	인수 3:문자색지정. 인수 2가 2나 3이었던 경우에 참조된다. 식 안의 함수@RGBCOLOR에 대응
;
;반복해 부르는 것으로 캐릭터 라인을 LOCALS에 저축해 가 인수로 지정했다 풀어에 모두 표시합니다.
;표시 방법은 대입할 경우에 지정 가능.
;보존하는 범위를 2개 준비해 있으므로
;
;@이것 보고
;일행내에서의 칼라 변경에 대응. 거기에 따라 『1000행』으로부터 『1000회의 호출』까지 인수에 열화
;폰트 지정은 현재 불필요한가
;어디까지나 기준치 함수용인 것으로 STRBANKL등의 관련 함수는 무시
;그 외 미묘하게 변경. 변경 앞쪽이 빠를지도 모르지만 곤란하고 나서 생각한다
;-------------------------------------------------
@STRBANK_CRI(ARGS = "", ARG = -1, ARG:1 = 0, ARG:2 = 0, ARG:3 = 0)
#LOCALSIZE 2000
#LOCALSSIZE 2000
#DIM COLORDATA, 2000
#DIM COLORNUM, 2000
#DIM SET_LOCALS, 1
#DIM PLACE, 1
#DIM SCOPE, 1
#DIM LCOUNT, 2
;초기설정
IF !SET_LOCALS
	;변수 초기화
	VARSET LOCALS, "VOID"
	VARSET LOCAL, 0
	;보관 위치를 초기화
	PLACE = 0
	;보관 범위를 초기화
	SCOPE = 1000
	;초기화 완료를 확인
	SET_LOCALS = 1
ENDIF
;ARG가 0이상이라면 보관 위치를 변경
IF ARG > -1
	PLACE = SCOPE * ARG
ENDIF
;예금
IF ARG:1 < 3
	;아직 하늘의 변수를 찾는다
	LCOUNT = FINDELEMENT(LOCALS, "VOID", PLACE, PLACE + SCOPE - 1, 1)
	;캐릭터 라인이나 지정을 대입
	LOCALS:LCOUNT = %ARGS%
	LOCAL:LCOUNT = ARG:1
	COLORDATA:LCOUNT = ARG:2
	COLORNUM:LCOUNT = ARG:3
;인출
ELSE
	;폐기가 지정되고 있는 경우 표시를 실시하지 않는다
	IF ARG:1 < 5
		;표시 완료까지 재묘화 하지 않는다
		REDRAW 0
		;순서에 표시 처리를 실시한다
		FOR LCOUNT, PLACE, PLACE + SCOPE
			;하늘의 변수에 해당되면 종료
			SIF LOCALS:LCOUNT == "VOID"
				BREAK
			;색지정에 따라 표시
			SELECTCASE COLORDATA:LCOUNT
				;지정 없음
				CASE 0
;OriginalString : LOCALS:LCOUNT
					PRINTS LOCALS:LCOUNT
				;일시 데포카라
				CASE 1
;OriginalString : LOCALS:LCOUNT
					PRINTSD LOCALS:LCOUNT
				;일시 칼라 지정(색을 일시적으로 변경해, 원래에 되돌린다)
				CASE 2
					LCOUNT:1 = GETCOLOR()
					SETCOLOR COLORNUM:LCOUNT
;OriginalString : LOCALS:LCOUNT
					PRINTS LOCALS:LCOUNT
					SETCOLOR LCOUNT:1
				;칼라 지정하면서, 그 칼라를 유지한다
				CASE 3
					SETCOLOR COLORNUM:LCOUNT
;OriginalString : LOCALS:LCOUNT
					PRINTS LOCALS:LCOUNT
			ENDSELECT
			;개행 지정에 따라 개행
			SELECTCASE LOCAL:LCOUNT
				;개행
				CASE 1
					PRINTL 
				;클릭 대기
				CASE 2
;OriginalString : 
					PRINTW 
			ENDSELECT
		NEXT
		;재묘화, 묘화 설정을 되돌린다
		REDRAW 3
	ENDIF
	;방출만 지정이 아니면 폐기
	IF ARG:1 != 4
		VARSET LOCALS, "VOID", PLACE, PLACE + SCOPE
		VARSET LOCAL, 0, PLACE, PLACE + SCOPE
	ENDIF
ENDIF
RETURN RESULT

;-------------------------------------------------------------------------------
;	관리함수 본체
;-------------------------------------------------------------------------------

;-------------------------------------------
;관리함수 본체
;직접 호출하는 것은 기본적으로 이루어
;입출력·표시 함수군으로부터 마셔 호출한다
;-------------------------------------------
@VARIABLE_OF_CRI, ARGS, ARGS:1, ARG, ARG:1
#FUNCTION
;LOCAL, LOCALS는 최저한을 확보
#LOCALSIZE 2
#LOCALSSIZE 30
;카운트 변수
#DIM LCOUNT, 1
;기준치 명칭
#DIMS LNAME, 30
;기준치 약칭
#DIMS LDNAME, 30
;항목명
#DIMS LTIT, 1
;기준치수
#DIM LNUM, 2
;선택제스윗치
#DIM LMARK, 30
;우선도
#DIM LPRI, 2
;수치관리변수군
;STOT =소계
;TOT  =총계
;FLAG =항목별 처리필 스윗치
;FLAGG=항목 횡단 처리필 스윗치
;+A   =가산
;+M   =곱셈
;+C   =변동치
;+N   =부
#DIM LSTOT, 30
#DIM LTOT, 30
#DIM LASTOT, 30
#DIM LATOT, 30
#DIM LACSTOT, 30
#DIM LACTOT, 30
#DIM LACNSTOT, 30
#DIM LACNTOT, 30
#DIM LMSTOT, 30
#DIM LMTOT, 30
#DIM LMCSTOT, 30
#DIM LMCTOT, 30
#DIM LMCNSTOT, 30
#DIM LMCNTOT, 30
;LOCAL, LOCALS는 항상 초기화
VARSET LOCAL
VARSET LOCALS
;ARGS에 의해 처리를 분류
SELECTCASE ARGS
	;수치 가산
	CASE "ADD"
		;지정 기준치종을 찾는다
		LOCAL = FINDELEMENT(LNAME, ARGS:1, , , 1)
		;기준치종이 존재하지 않으면 처리를 중단
		SIF LOCAL == -1
			RETURNF -1
		;우선도에 따라 수치보정
		ARG = ARG * LPRI / 100
		ARG:1 = ARG:1 * LPRI / 100
		;고정치가 있으면
		IF ARG
			;고정치를 가산
			LTOT  :LOCAL += ARG
			LSTOT :LOCAL += ARG
			LATOT :LOCAL += ARG
			LASTOT:LOCAL += ARG
		ENDIF
		;변동치가 있으면
		IF ARG:1
			;이번 가산량을 계산
			LOCAL:1 = ARG:1 > 0 ? RAND:(ARG:1 + 1) # -RAND:(-ARG:1 + 1)
			;변동치를 가산
			LTOT :LOCAL += LOCAL:1
			LSTOT:LOCAL += LOCAL:1
			;정부에 의해 배분해, 변동치 최대량을 해석용으로 보존
			IF ARG:1 > 0
				LACTOT  :LOCAL += ABS(ARG:1)
				LACSTOT :LOCAL += ABS(ARG:1)
			ELSE
				LACNTOT :LOCAL -= ABS(ARG:1)
				LACNSTOT:LOCAL -= ABS(ARG:1)
			ENDIF
		ENDIF
	;수치 곱셈
	CASE "MUL"
		;지정 기준치종을 찾는다
		LOCAL = FINDELEMENT(LNAME, ARGS:1, , , 1)
		;기준치종이 존재하지 않으면 처리를 중단
		SIF LOCAL == -1
			RETURNF -1
		;우선도에 따라 수치보정
		IF ABS(ARG) > 100
			;절대치가 1 2배 초과과라면 고우선도로 배율 상승
			ARG = ARG * LPRI / 100
			ARG:1 = ARG:1 * LPRI / 100
		ELSEIF ABS(ARG) < 100
			;절대치가 1배 미만이라면 고우선도로 배율 하강
			ARG = ARG * 100 / LPRI
			ARG:1 = ARG:1 * 100 / LPRI
		ENDIF
		;고정치가 있으면
		IF ARG != 100
			;고정치를 곱셈
			LSTOT :LOCAL -= LTOT  :LOCAL
			LTOT  :LOCAL  = LTOT  :LOCAL * ARG / 100
			LSTOT :LOCAL += LTOT  :LOCAL
			LMTOT :LOCAL  = LMTOT :LOCAL * ARG / 100
			LMSTOT:LOCAL  = LMSTOT:LOCAL * ARG / 100
		ENDIF
		;변동치가 있으면
		IF ARG:1 != 100
			;이번 곱셈량을 계산
			LOCAL:1 = ARG:1 > 0 ? RAND:(ARG:1 + 1) # -RAND:(-ARG:1 + 1)
			;변동치를 곱셈
			LSTOT :LOCAL -= LTOT:LOCAL
			LTOT  :LOCAL  = LTOT:LOCAL * LOCAL:1 / 100
			LSTOT :LOCAL += LTOT:LOCAL
			;정부에 의해 배분해, 변동치 최대량을 해석용으로 보존
			IF ARG:1 > 0
				LMCTOT  :LOCAL = LMCTOT :LOCAL * ARG:1 / 100
				LMCSTOT :LOCAL = LMCSTOT:LOCAL * ARG:1 / 100
			ELSE
				LMCNTOT :LOCAL = LMCTOT :LOCAL * ARG:1 / 100
				LMCNSTOT:LOCAL = LMCSTOT:LOCAL * ARG:1 / 100
			ENDIF
		ENDIF
	;우선도 변경
	CASE "PRI"
		LPRI:1 = 0
		IF ARG:1 == 0
			LPRI = ARG
		ELSE
			LPRI = 100
		ENDIF
		LPRI:1 = ARG:1
	CASE "GET"
		SELECTCASE ARGS:1
			CASE "기준치종수"
				RETURNF LNUM
			CASE "기준치 종명"
				FOR LCOUNT, 0, LNUM
					RESULTS:LCOUNT = LNAME:LCOUNT
				NEXT
				RETURNF LNUM
			CASE "기준치종 약칭"
				FOR LCOUNT, 0, LNUM
					IF LDNAME:LCOUNT != ""
						RESULTS:LCOUNT = %LDNAME:LCOUNT%
					ELSE
						RESULTS:LCOUNT = %LNAME:LCOUNT%
					ENDIF
				NEXT
				RETURNF LNUM
			CASE "항목"
				RESULTS = %LTIT%
			CASE "작은 변화동유무"
				FOR LCOUNT, 0, LNUM
					IF LSTOT:LCOUNT != 0
						LOCAL = 1
						BREAK
					ENDIF
				NEXT
				RETURNF LOCAL
			CASE "가산 유무"
				FOR LCOUNT, 0, LNUM
					IF LASTOT:LCOUNT != 0 || LACSTOT:LCOUNT != 0 || LACNSTOT:LCOUNT != 0
						LOCAL = 1
						BREAK
					ENDIF
				NEXT
				RETURNF LOCAL
			CASE "곱셈 유무"
				FOR LCOUNT, 0, LNUM
					IF LMSTOT:LCOUNT != 100 || LMCSTOT:LCOUNT != 100 || LMCNSTOT:LCOUNT != 100
						LOCAL = 1
						BREAK
					ENDIF
				NEXT
				RETURNF LOCAL
			CASE "소계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LSTOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LTOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "고정 소계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LASTOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "고정 누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LATOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "고정 곱셈 소계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LMSTOT:LCOUNT, -9900, 9900)
				NEXT
				RETURNF LNUM
			CASE "고정 곱셈 누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LMTOT:LCOUNT, -9900, 9900)
				NEXT
				RETURNF LNUM
			CASE "변동 누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LACTOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "변동부누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LACNTOT:LCOUNT, -99, 99)
				NEXT
				RETURNF LNUM
			CASE "변동 곱셈 누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LMCTOT:LCOUNT, -9900, 9900)
				NEXT
				RETURNF LNUM
			CASE "변동부곱셈 누계"
				FOR LCOUNT, 0, LNUM
					RESULT:LCOUNT = LIMIT(LMCNTOT:LCOUNT, -9900, 9900)
				NEXT
				RETURNF LNUM
			CASE "우선도"
				RETURNF LPRI
			CASE "우선도 채용"
				RETURNF LPRI:1
			;기준치 관련 변수 호출
			;서식:『기준치 종명』(고정(곱셈|)|변동((부|) 곱셈|)|)(소계|누계)
			;-99가 하한이 되어 있다
			CASEELSE
				;예외
				;명칭이 『결정』으로부터 시작되는 경우 결정종을반환
				;또, 동시에 RESULTS로 결정 종명을반환
				IF STRFINDU(ARGS:1, "결정") != -1
					ARGS:1 = SUBSTRINGU(ARGS:1, 2)
					LOCAL = TOINT(ARGS:1)
					LOCAL:1 = -1
					FOR LCOUNT, 0, LNUM
						IF LMARK:LCOUNT
							LOCAL--
							IF LOCAL == -1
								LOCAL:1 = LCOUNT
								BREAK
							ENDIF
						ENDIF
					NEXT
					SIF LOCAL:1 != -1
						RESULTS = %LNAME:(LOCAL:1)%
					RETURNF LOCAL:1
				ENDIF
				;명칭 포인터를 말미에 이동
				LOCAL:1 = STRLENSU(ARGS:1)
				;LOCALS에 식별자를 대입
				SPLIT "고정/변동/부/곱셈/소계/누계", "/", LOCALS
				;식별자의 수만큼 처리
				FOR LCOUNT, 0, FINDELEMENT(LOCALS, "", , , 1)
					;식별자를 검색해, 존재하면 비트를 조작해 위치를 보존
					STRFINDU ARGS:1, LOCALS:LCOUNT
					IF RESULT != -1
						LOCAL |= 1 << LCOUNT
						LOCAL:1 = MIN(LOCAL:1, RESULT)
					ENDIF
				NEXT
				;식별자를 잘라낸다
				ARGS:1 = %SUBSTRINGU(ARGS:1, 0, LOCAL:1)%
				;지정 기준치종을 검색
				LOCAL:1 = FINDELEMENT(LNAME, ARGS:1, , , 1)
				;기준치종이 존재하지 않으면 처리를 중단
				SIF LOCAL:1 == -1
					RETURNF -1
				;고정
				IF LOCAL & 1
					;곱셈
					IF LOCAL & 8
						;소계
						IF LOCAL & 16
							RETURNF LIMIT(LMSTOT:(LOCAL:1), -9900, 9900)
						;누계
						ELSE
							RETURNF LIMIT(LMTOT:(LOCAL:1), -9900, 9900)
						ENDIF
					;그 외(가산)
					ELSE
						;소계
						IF LOCAL & 16
							RETURNF LIMIT(LASTOT:(LOCAL:1), -99, 99)
						;누계
						ELSE
							RETURNF LIMIT(LATOT:(LOCAL:1), -99, 99)
						ENDIF
					ENDIF
				;변동
				ELSEIF LOCAL & 2
					;부
					IF LOCAL & 4
						;곱셈
						IF LOCAL & 8
							;소계
							IF LOCAL & 16
								RETURNF LIMIT(LMCNSTOT:(LOCAL:1), -99, 99)
							;누계
							ELSE
								RETURNF LIMIT(LMCNTOT:(LOCAL:1), -99, 99)
							ENDIF
						;그 외(가산)
						ELSE
							;소계
							IF LOCAL & 16
								RETURNF LIMIT(LACNSTOT:(LOCAL:1), -99, 99)
							;누계
							ELSE
								RETURNF LIMIT(LACNTOT:(LOCAL:1), -99, 99)
							ENDIF
						ENDIF
					;정
					ELSE
						;곱셈
						IF LOCAL & 8
							;소계
							IF LOCAL & 16
								RETURNF LIMIT(LMCSTOT:(LOCAL:1), -9900, 9900)
							;누계
							ELSE
								RETURNF LIMIT(LMCTOT:(LOCAL:1), -9900, 9900)
							ENDIF
						;그 외(가산)
						ELSE
							;소계
							IF LOCAL & 16
								RETURNF LIMIT(LACSTOT:(LOCAL:1), -99, 99)
							;누계
							ELSE
								RETURNF LIMIT(LACTOT:(LOCAL:1), -99, 99)
							ENDIF
						ENDIF
					ENDIF
				;그 외(기준치)
				ELSE
					;소계
					IF LOCAL & 16
						RETURNF LIMIT(LSTOT:(LOCAL:1), -99, 99)
					;누계
					ELSE
						RETURNF LIMIT(LTOT:(LOCAL:1), -99, 99)
					ENDIF
				ENDIF
		ENDSELECT
	;수치 초기화
	CASE "RES"
		IF ARG
			VARSET LTOT
			VARSET LATOT
			VARSET LACTOT
			VARSET LACNTOT
			VARSET LMTOT, 100
			VARSET LMCTOT, 100
			VARSET LMCNTOT, 100
		ENDIF
		VARSET LSTOT
		VARSET LASTOT
		VARSET LACSTOT
		VARSET LACNSTOT
		VARSET LMSTOT, 100
		VARSET LMCSTOT, 100
		VARSET LMCNSTOT, 100
	;항목 변경
	CASE "CHA"
		IF ARGS:1 != ""
			RESULTS = %LTIT%
			LTIT = %ARGS:1%
		ENDIF
	;선택확정
	CASE "DEF"
		;확정 초기화
		VARSET LMARK
		;	이하 스키 준
		;결정 처리를 실시하지 않는다
		;※수치를 직접취득 해 순위를 결정하는 경우 따위
		IF ARGS:1 == ""
			RETURNF 0
		;외부 결정
		;서식:외부_『확정 기준치종 1』/『2』,……
		ELSEIF STRFINDU(ARGS:1, "외부") != -1
			ARGS:1 = SUBSTRINGU(ARGS:1, 3)
			SPLIT ARGS, "/", LOCALS
			FOR LCOUNT, 0, RESULT
				LOCAL = TOINT(LOCALS:LCOUNT)
				LMARK:LOCAL++
			NEXT
			IF RESULT
				RETURNF RESULT
			ELSE
				RETURNF 0
			ENDIF
		;최대치 채용
		;서식:최대( 『보조 기준』)
		ELSEIF STRFINDU(ARGS:1, "최대") != -1
			LOCAL = MAXARRAY(LTOT, 0, LNUM)
			IF LOCAL > -100
				FOR LCOUNT, 0, LNUM
					SIF LTOT:LCOUNT == LOCAL
						LMARK:LCOUNT++
				NEXT
			ENDIF
		;최소치 채용
		;서식:최소( 『보조 기준』)
		ELSEIF STRFINDU(ARGS:1, "최소") != -1
			LOCAL = MINARRAY(LTOT, 0, LNUM)
			IF LOCAL > -100
				FOR LCOUNT, 0, LNUM
					SIF LTOT:LCOUNT == LOCAL
						LMARK:LCOUNT++
				NEXT
			ENDIF
		ENDIF
		;	이하 보조 기준
		;전자우선
		;서식:( 『스키 준』) 전자
		IF STRFINDU(ARGS:1, "전자") != -1
			LOCAL = -1
			FOR LCOUNT, 0, LNUM
				IF LMARK:LCOUNT
					LOCAL = LCOUNT
					BREAK
				ENDIF
			NEXT
			IF LOCAL != -1
				VARSET LMARK
				LMARK:LOCAL = 1
			ENDIF
		;후자우선
		;서식:( 『스키 준』) 후자
		ELSEIF STRFINDU(ARGS:1, "후자") != -1
			LOCAL = -1
			FOR LCOUNT, LNUM - 1, -1, -1
				IF LMARK:LCOUNT
					LOCAL = LCOUNT
					BREAK
				ENDIF
			NEXT
			IF LOCAL != -1
				VARSET LMARK
				LMARK:LOCAL = 1
			ENDIF
		;우선지정
		;서식:( 『스키 준』)우선지정-(기준치종/기준치종/……)
		ELSEIF STRFINDU(ARGS:1, "우선지정") != -1
			;우선지정 내용에 집중
			LOCAL = STRFINDU(ARGS:1, "우선지정")
			;내용을 잘라
			ARGS:1 = %SUBSTRINGU(ARGS:1, LOCAL + 5)%
			SPLIT ARGS:1, "/", LOCALS
			;지정을 초기화
			LOCAL = -1
			;전지정을 검색
			FOR LCOUNT, 0, RESULT
				;지정대상를 검색한다
				LOCAL:1 = FINDELEMENT(LNAME, LOCALS:LCOUNT, , , 1)
				;지정대상가 존재하지 않으면
				IF LOCAL:1 == -1
					;수치 지정과 판단
					LOCAL:1 = TOINT(LOCALS)
					;수치 지정도 아니면 날린다
					SIF LOCALS != @"{LOCAL:1}"
						CONTINUE
				ENDIF
				;지정 기준치종이 선택되고 있으면 검색 종료
				IF LMARK:(LOCAL:1)
					LOCAL = LOCAL:1
					BREAK
				ENDIF
			NEXT
			;지정이 있으면 확정종 변환
			IF LOCAL != -1
				VARSET LMARK
				LMARK:LOCAL = 1
			ENDIF
		ENDIF
		;확정 치수을반환
		LOCAL = 0
		FOR LCOUNT, 0, LNUM
			SIF LMARK:LCOUNT
				LOCAL++
		NEXT
		RETURNF LOCAL
	;함수 초기화 ;함수 초기화/기준치종 지정
	CASE "SET"
		IF ARG == 0
			VARSET LNAME
			VARSET LDNAME
			VARSET LTIT
			VARSET LNUM
			VARSET LMARK
			VARSET LPRI, 100
			VARSET LSTOT
			VARSET LTOT
			VARSET LASTOT
			VARSET LATOT
			VARSET LACSTOT
			VARSET LACTOT
			VARSET LACNSTOT
			VARSET LACNTOT
			VARSET LMSTOT, 100
			VARSET LMTOT, 100
			VARSET LMCSTOT, 100
			VARSET LMCTOT, 100
			VARSET LMCNSTOT, 100
			VARSET LMCNTOT, 100
		ENDIF
		SPLIT ARGS:1, "/", LOCALS
		IF ARG:1 == 0
			LOCAL = LNUM
		ELSE
			LOCAL = LNUM:1
		ENDIF
		FOR LCOUNT, 0, 30
			SIF LOCALS:LCOUNT == ""
				BREAK
			IF ARG:1 == 0
				LNAME:LOCAL = %LOCALS:LCOUNT%
			ELSE
				LDNAME:LOCAL = %LOCALS:LCOUNT%
			ENDIF
			LOCAL++
		NEXT
		IF ARG:1 == 0
			LNUM = LOCAL
		ELSE
			LNUM:1 = LOCAL
		ENDIF
ENDSELECT
